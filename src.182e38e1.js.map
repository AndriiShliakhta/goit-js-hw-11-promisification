{"version":3,"sources":["js/task1.js","js/task2.js","index.js"],"names":["delay","ms","Promise","resolve","reject","setTimeout","logger","time","console","log","task1","then","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table","task2"],"mappings":";;;AAkBC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAjBD,MAAMA,EAAQC,GAEL,IAAIC,QAAQ,CAACC,EAASC,KAC3BC,WAAW,KACTF,EAAQF,IACPA,KAIDK,EAASC,GAAQC,QAAQC,sBAAsBF,OAGtC,SAASG,IAEpBV,EAAM,KAAMW,KAAKL,GACjBN,EAAM,KAAMW,KAAKL,GACjBN,EAAM,MAAMW,KAAKL;;ACYpB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EA3BD,MAAMM,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,CAACC,EAAUC,IAC1B,IAAIf,QAAQ,CAACC,EAASC,KAE3BD,EAAQa,EAASE,IAAIC,GACnBA,EAAKN,OAASI,EAAW,IAAKE,EAAML,QAASK,EAAKL,QAAWK,MAI7Db,EAASc,GAAgBZ,QAAQa,MAAMD,GAS9B,SAASE,IACpBP,EAAgBH,EAAO,SAASD,KAAKL,GACrCS,EAAgBH,EAAO,OAAOD,KAAKL;;ACjBvC,aAXA,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,eASA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IALA,EAEA,EAAA,YACA,EAEA,EAAA","file":"src.182e38e1.js","sourceRoot":"../src","sourcesContent":["// =============== Задание 1 ====================\nconst delay = ms => {\n  // Твой код\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve(ms);\n    }, ms);\n  });\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n\nexport default function task1() {\n    // Вызовы функции для проверки\n    delay(2000).then(logger); // Resolved after 2000ms\n    delay(1000).then(logger); // Resolved after 1000ms\n    delay(1500).then(logger); // Resolved after 1500ms\n}\n\n\n","// =============== Задание 2 ====================\n\nconst users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n  return new Promise((resolve, reject) => {\n     \n    resolve(allUsers.map(user =>\n      user.name === userName ? { ...user, active: !user.active } : user, ))\n    });\n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n/*\n * Сейчас работает так\n */\n// toggleUserState(users, 'Mango', logger);\n// toggleUserState(users, 'Lux', logger);\n/*\n * Должно работать так\n */\nexport default function task2() {\n    toggleUserState(users, 'Mango').then(logger);\n    toggleUserState(users, 'Lux').then(logger);\n}\n","import './sass/main.scss';\nimport task1 from './js/task1';\nimport task2 from './js/task2';\n\n// =============== Задание 1 ====================\n// Вызовы функции для проверки\ntask1();\n\n// =============== Задание 2 ====================\ntask2();\n\n// =============== Задание 3 ====================\n\n"]}
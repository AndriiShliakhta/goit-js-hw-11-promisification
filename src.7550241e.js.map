{"version":3,"sources":["index.js"],"names":["users","name","active","toggleUserState","allUsers","userName","Promise","resolve","reject","map","user","logger","updatedUsers","console","table","then"],"mappings":";;;AA+CA,aA/CA,QAAA,oBAsBA,MAAMA,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,CAACC,EAAUC,IAC1B,IAAIC,QAAQ,CAACC,EAASC,KAE3BD,EAAQH,EAASK,IAAIC,GACnBA,EAAKT,OAASI,EAAW,IAAKK,EAAMR,QAASQ,EAAKR,QAAWQ,MAI7DC,EAASC,GAAgBC,QAAQC,MAAMF,GAS7CT,EAAgBH,EAAO,SAASe,KAAKJ,GACrCR,EAAgBH,EAAO,OAAOe,KAAKJ","file":"src.7550241e.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\n// =============== Задание 1 ====================\n// const delay = ms => {\n//   // Твой код\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       resolve(ms);\n//     }, ms);\n//   });\n// };\n\n// const logger = time => console.log(`Resolved after ${time}ms`);\n\n// // Вызовы функции для проверки\n// delay(2000).then(logger); // Resolved after 2000ms\n// delay(1000).then(logger); // Resolved after 1000ms\n// delay(1500).then(logger); // Resolved after 1500ms\n\n\n\n// =============== Задание 2 ====================\nconst users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n  return new Promise((resolve, reject) => {\n     \n    resolve(allUsers.map(user =>\n      user.name === userName ? { ...user, active: !user.active } : user, ))\n    });\n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n/*\n * Сейчас работает так\n */\n// toggleUserState(users, 'Mango', logger);\n// toggleUserState(users, 'Lux', logger);\n/*\n * Должно работать так\n */\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);\n"]}